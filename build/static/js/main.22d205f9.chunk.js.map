{"version":3,"sources":["Filter.js","PersonForm.js","Person.js","Persons.js","Notification.js","services/contactService.js","App.js","index.js"],"names":["Filter","props","type","value","onChange","handleChange","PersonForm","onSubmit","handleSubmit","nameValue","handleNameChange","numberValue","handleNumberChange","Person","style","display","name","number","onClick","handleDelete","id","Persons","persons","map","person","key","Notification","message","className","baseUrl","axios","get","then","response","data","newContact","post","contactToUpdate","put","delete","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","notificationObj","setNotificationObj","useEffect","contactService","personData","personsToShow","filter","toLowerCase","includes","event","target","preventDefault","doesPersonExist","length","setTimeout","window","confirm","personToUpdate","find","p","newPersonObj","returnedContact","catch","err","createdContact","concat","deletedContact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22d205f9.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Filter(props) {\r\n  return (\r\n    <div>\r\n      search by name:<input type=\"text\" value={props.value} onChange={props.handleChange} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter;","import React from 'react'\r\n\r\nfunction PersonForm(props) {\r\n  return (\r\n    <div>\r\n      <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n          name: <input type=\"text\" value={props.nameValue} onChange={props.handleNameChange} />\r\n        </div>\r\n        <div>\r\n          number: <input type=\"text\" value={props.numberValue} onChange={props.handleNumberChange} />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PersonForm;\r\n","import React from 'react'\r\n\r\nfunction Person(props) {\r\n  return (\r\n    <div>\r\n      <p style={{display:\"inline\"}}>{props.name} - {props.number}</p>\r\n      <button onClick={() => props.handleDelete(props.id)}>delete</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Person;","import React from 'react'\r\nimport Person from './Person'\r\n\r\nfunction Persons(props) {\r\n  return (\r\n    <div>\r\n      {props.persons.map(person =>\r\n        <div key={person.id} style={{display:\"inline\"}}>\r\n          <Person key={person.name} id={person.id} name={person.name} number={person.number} handleDelete={props.handleDelete}/>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Persons\r\n","import React from 'react'\r\nimport './notification.css'\r\n\r\nfunction Notification({type, message}) {\r\n  if (type === null) {\r\n    return null\r\n  }\r\n\r\n  if (type === 'error') {\r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (type === 'success') {\r\n    return (\r\n      <div className=\"success\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default Notification;\r\n","import axios from 'axios';\r\n\r\nconst baseUrl = 'https://fso20-phonebook.herokuapp.com/api/persons';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst createContact = newContact => {\r\n  const request = axios.post(baseUrl, newContact);\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst updateContact = (id, contactToUpdate) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, contactToUpdate)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deleteContact = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, createContact, updateContact, deleteContact}","import React, { useState, useEffect } from 'react'\nimport Filter from './Filter'\nimport PersonForm from \"./PersonForm\"\nimport Persons from './Persons'\nimport Notification from './Notification'\nimport contactService from './services/contactService'\n\nconst App = () => {\n\n  // states\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [notificationObj, setNotificationObj] = useState({ type: null, message: '' })\n  //const [notificationMsg, setNotificationMsg] = useState('')\n\n  // handlers\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    let doesPersonExist = persons.filter(person => person.name === newName).length;\n    let doesNumberExist = persons.filter(person => person.number === newNumber).length\n    if (doesNumberExist) {\n      setNotificationObj({ type: 'error', message: 'This number already exists!' })\n      setTimeout(() => {\n        setNotificationObj({ type: null, message: '' })\n      }, 3000);\n    }\n    else if (doesPersonExist) {\n      if (window.confirm(`${newName} already has a number in phone book. Do you want to replace the old number with the new one?`)) {\n        const personToUpdate = persons.find(p => p.name === newName)\n        const newPersonObj = { ...personToUpdate, number: newNumber }\n        contactService\n          .updateContact(personToUpdate.id, newPersonObj)\n          .then(returnedContact => setPersons(persons.map(p => p.id !== personToUpdate.id ? p : returnedContact))).catch(err => {\n            setNotificationObj({ type: 'error', message: 'An error occured when updating!' })\n            setTimeout(() => {\n              setNotificationObj({ type: null, message: '' })\n            }, 3000)\n            setPersons(persons.filter(person => person.id !== personToUpdate.id))\n            \n          })\n        setNotificationObj({ type: 'success', message: 'Number updated!' })\n        setTimeout(() => {\n          setNotificationObj({ type: null, message: '' })\n        }, 3000);\n        setNewName('')\n        setNewNumber('')\n      }\n    }\n    else {\n      const personObject = { name: newName, number: newNumber }\n      contactService\n        .createContact(personObject)\n        .then(createdContact => setPersons(persons.concat(createdContact)))\n      setNotificationObj({ type: 'success', message: `${newName} successfully added to the phonebook!` })\n      setTimeout(() => {\n        setNotificationObj({ type: null, message: '' })\n      }, 3000);\n      setNewName('')\n      setNewNumber('')\n    }\n  }\n\n  const handleDelete = id => {\n    if (window.confirm('Do you really want to delete this contact?')) {\n      contactService\n        .deleteContact(id)\n        .then(deletedContact => setPersons(persons.filter(person => person.id !== id))).catch(err => {\n          setNotificationObj({ type: 'error', message: 'An error occured when deleting contact' })\n          setTimeout(() => {\n            setNotificationObj({ type: null, message: '' })\n          }, 3000);\n        })\n      setNotificationObj({ type: 'success', message: 'Number successfully deleted!' })\n      setTimeout(() => {\n        setNotificationObj({ type: null, message: '' })\n      }, 3000)\n      setPersons(persons.filter(person => person.id !== id))\n    }\n  }\n\n  // fetch data only after first render\n  useEffect(() => {\n    contactService\n      .getAll()\n      .then(personData => setPersons(personData))\n  }, [])\n\n  const personsToShow = persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()))\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification type={notificationObj.type} message={notificationObj.message} />\n      <Filter value={newFilter} handleChange={handleFilterChange} />\n      <h2>add a new person</h2>\n      <PersonForm\n        handleSubmit={handleSubmit}\n        nameValue={newName} handleNameChange={handleNameChange}\n        numberValue={newNumber} handleNumberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={personsToShow} handleDelete={handleDelete} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}